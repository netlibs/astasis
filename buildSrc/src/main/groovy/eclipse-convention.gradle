
import org.gradle.plugins.ide.eclipse.model.ProjectDependency
import org.gradle.plugins.ide.eclipse.model.SourceFolder

plugins {
  id 'eclipse'
  id 'com.diffplug.eclipse.apt'
}

if (tasks.findByName('cleanEclipseFactorypath')) {
  project.rootProject.tasks['configureBuildship'].dependsOn(
    tasks['cleanEclipseClasspath'],
    tasks['cleanEclipseFactorypath'],
    tasks['cleanEclipseJdtApt'],
    tasks['cleanEclipseJdt'],
    tasks['eclipseClasspath'],
    tasks['eclipseFactorypath'],
    tasks['eclipseJdtApt'],
    tasks['eclipseJdt'],
  )  
}
else if (tasks.findByName('eclipseFactorypath')) {
  project.rootProject.tasks['configureBuildship'].dependsOn(
    tasks['eclipseClasspath'],
    tasks['eclipseFactorypath'],
    tasks['eclipseJdtApt'],
    tasks['eclipseJdt'],
  )
}
else {
  project.rootProject.tasks['configureBuildship'].dependsOn(
    tasks['eclipseClasspath'],
    tasks['eclipseJdtApt'],
    tasks['eclipseJdt'],
  )
}



eclipse {

  // synchronizationTasks configureBuildship
  
  project {
    name = createProjectDisplayName()
  }
  
  classpath {
    containers 'org.eclipse.buildship.core.gradleclasspathcontainer'
  }
      
}



def createProjectDisplayName() {
  if (project == project.rootProject) {
    return project.name  
  }
  return "${project.rootProject.name}${project.path}"
}

